#ifndef GPIO_DRIVER_H_ 
#define GPIO_DRIVER_H_

void gpioInitIn(unsigned int Port, unsigned char Pin);  //Input Initialization
void gpioInitOut(unsigned int Port, unsigned char Pin); //output initialization
unsigned char gpioInitStatus(unsigned int Port, unsigned char Pin); //char Direction
void gpioWrite(unsigned int Port, unsigned char Pin, unsigned char value) ;

#endif  /* GPIO_DRIVER_H_ */




#include <msp430.h> 
#include "GPIO_Driver.h"
void gpioInitIn(unsigned int Port, unsigned char Pin) { 
    if (Port == 1) { 
       P1DIR &= ~Pin;
      P1REN |= Pin; 
      P1OUT |= Pin; 
  } else if (Port == 2) { 
      P2DIR &= ~Pin;
      P2REN |= Pin; 
      P2OUT |= Pin; 
  } else if (Port == 4) { 
      P4DIR &= ~Pin; 
      P4REN |= Pin;
      P4OUT |= Pin; 
  } else if (Port == 6) { 
      P6DIR &= ~Pin;
      P6REN |= Pin; 
      P6OUT |= Pin;
   }
}
void gpioInitOut(unsigned int Port, unsigned char Pin) { 
    if (Port == 1) { 
      P1DIR |= Pin;
      P1OUT &= ~Pin;
  } else if (Port == 2) { 
      P2DIR |= Pin;
      P2OUT &= ~Pin;
  } else if (Port == 4) { 
      P4DIR |= Pin;
      P4OUT &= ~Pin;
  } else if (Port == 6) { 
      P6DIR |= Pin;
      P6OUT &= ~Pin;
  }
}
unsigned char gpioInitStatus(unsigned int Port, unsigned char Pin) {
    unsigned char value = 0;
    if (Port == 1) { 
      value = P1IN & Pin;
  } else if (Port == 2) { 
      value = P2IN & Pin;
  } else if (Port == 4) { 
      value = P4IN & Pin;
  } else if (Port == 6) { 
      value = P6IN & Pin;
  }
   return value;
}
void gpioWrite(unsigned int Port, unsigned char Pin, unsigned char value) {
    if (Port == 1) { 
       if (value == 1) { 
            P1OUT |= Pin; 
        } else {
             P1OUT &= ~Pin;
        }
    } else if (Port == 2) { 
        if (value == 1) { 
            P2OUT |= Pin; 
         } else {
             P2OUT &= ~Pin;
          }   
   } else if (Port == 4) { 
        if (value == 1) { 
            P4OUT |= Pin; 
         } else {
             P4OUT &= ~Pin;
          }
    } else if (Port == 6) { 
        if (value == 1) { 
            P6OUT |= Pin; 
         } else {
             P6OUT &= ~Pin;
          }
      }
}


#include <msp430.h>
#include "GPIO_Driver.h" 
#define RED_LED BIT0 // P1.0
#define GREEN_LED BIT6 // P6.6
#define BUTTON1 BIT1 // Push button P4.1
#define BUTTON2 BIT3 // Push button P2.3

void main(void){
   WDTCTL = WDTPW | WDTHOLD;

    gpioInitOut(1, RED_LED); // Set P1.0 (RED_LED) as output 
    gpioInitOut(6, GREEN_LED); // Set P6.6 (GREEN_LED) as output 
    gpioInitIn(4, BUTTON1); // Set P4.1 (BUTTON1) as input with pull-up
    gpioInitIn(2, BUTTON2); // Set P2.3 (BUTTON2) as input with pull-up

    PM5CTL0 &= ~LOCKLPM5;                   // Disable the GPIO power-on default high-impedance mode
                                                              
   unsigned char value = 0;
   while(1){
       value = gpioInitStatus(4, BUTTON1);
       if (value == 0x00){
             _delay_cycles(5000);
             gpioWrite(1, RED_LED, 1);   // Turn on RED_LED
       } else
{
              gpioWrite(1, RED_LED, 0); // Turn off RED_LED       
        }     
       _delay_cycles(5000); // Additional delay 
   } 
}
